'use strict';
var cwdSpace = process.cwd();
var webpack = require('webpack');
var path = require('path');
var WebpackDevServer = require('webpack-dev-server');
var wpmConfig = require(path.join(cwdSpace, 'wpm.config.js'));
var config = require(path.join(cwdSpace, 'webpack.config.js'));

module.exports = function (gulp) {
    gulp.task('devserver', function() {
        var publicPath = config.output.publicPath;

        var Server = new WebpackDevServer(webpack(config), {
            publicPath: config.output.publicPath,
            hot: true,
            historyApiFallback: true,
            stats: {
                colors: true
            },
            proxy: {
                '/*': {
                    target: 'http://localhost:' + wpmConfig.server.port || 3000,
                    bypass: function(req, res, proxyOptions) {
                        var bypass = wpmConfig.webpackDevServer && wpmConfig.webpackDevServer.extraBypass
                            || function () { return true; };
                        if (!bypass(req, res, proxyOptions)){
                            return false;
                        }
                        if (req.url.indexOf('.tpl') === -1 && req.url.indexOf(publicPath) !== -1) {
                            console.log('Skipping proxy for browser request.');
                            return req.url;
                        }
                        return false;
                    }
                }
            }
        });
        var port = wpmConfig.webpackDevServer ? wpmConfig.webpackDevServer.port || 8301 : 8301;
        Server.listen(port, '0.0.0.0', function (err, result) {
            if (err) {
                console.log(err);
            }

            var hostname = process.env.HOST || 'localhost';
            console.log('Listening at ' + hostname + ':' + port);
        });
        return gulp;
    });
}
